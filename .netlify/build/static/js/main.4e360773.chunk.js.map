{"version":3,"sources":["api.js","components/Header.jsx","components/ErrorPage.jsx","components/TopicSelect.jsx","components/NavBar.jsx","components/VotingBtns.jsx","components/ArticleCard.jsx","components/SortArticleBar.jsx","components/Loading.jsx","components/AllArticles.jsx","components/CommentAdder.jsx","components/CommentCard.jsx","components/ArticleComments.jsx","components/SingleArticle.jsx","components/SingleTopic.jsx","components/HomePage.jsx","components/LoggedUserInfo.jsx","App.js","serviceWorker.js","index.js"],"names":["getArticles","query","axios","get","params","p","page","topic","author","sort_by","sortBy","order","then","data","articles","total_articles","total_count","getCommentsForArticle","id","comments","addCommentOnArticle","username","body","post","comment","removeCommentById","delete","updateVoteOnArticle","inc_votes","patch","updateVoteOnComment","Header","props","className","ErrorPage","console","dir","error","status","response","msg","TopicSelect","state","topicList","curOption","handleClick","event","target","value","navigate","setState","this","name","onChange","map","key","slug","topics","catch","setDefault","resetDefault","Component","NavBar","to","onClick","VotingBtns","votes","upvoteClicked","downvoteClicked","handleUpVoteClick","voteVal","Number","curState","updateVotes","handleDownVoteClick","vote","article_id","api","comment_id","disabled","user","dateReg","ArticleCard","article","title","comment_count","created_at","match","split","reverse","join","SortArticleBar","changeQuery","Loading","type","color","AllArticles","curPage","article_count","sortQuery","isLoading","nextPage","fetchArticles","inc","prevPage","dec","options","length","update","changeSortQuery","queryArr","forEach","item","index","prevProps","prevState","CommentAdder","commentInput","validateInput","removeDefaultText","handleSubmit","preventDefault","input","commentIsAdded","onSubmit","required","CommentCard","ArticleComments","fetchComments","updateCommentTotal","handleDeleteClick","loadNextPage","total_comments","commentsCopy","push","loadFirstPage","trueOnMount","SingleArticle","showComment","showHideComments","updateCommentCount","commentNum","setTrueOnCommentsMount","path","SingleTopic","topic_slug","HomePage","users","handleLogin","src","avatar_url","alt","LoggedUserInfo","loggedUser","loggedUserImg","App","handleLoginLogout","localStorage","setItem","getItem","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e360773.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getTopics = () => {\n  return axios\n    .get(\"https://toms-news-api.herokuapp.com/api/topics\")\n    .then(({ data }) => {\n      return data.topics;\n    });\n};\n\nexport const getArticles = query => {\n  return axios\n    .get(\"https://toms-news-api.herokuapp.com/api/articles\", {\n      params: {\n        p: query && query.page,\n        topic: query && query.topic,\n        author: query && query.author,\n        sort_by: query && query.sortBy,\n        order: query && query.order\n      }\n    })\n    .then(({ data }) => {\n      return { articles: data.articles, total_articles: data.total_count };\n    });\n};\n\nexport const getArticleById = id => {\n  return axios\n    .get(`https://toms-news-api.herokuapp.com/api/articles/${id}`)\n    .then(({ data }) => {\n      return data.article;\n    });\n};\n\nexport const getCommentsForArticle = (id, query) => {\n  return axios\n    .get(`https://toms-news-api.herokuapp.com/api/articles/${id}/comments`, {\n      params: { p: query && query.page }\n    })\n    .then(({ data }) => {\n      return data.comments;\n    });\n};\n\nexport const addCommentOnArticle = (id, username, body) => {\n  return axios\n    .post(`https://toms-news-api.herokuapp.com/api/articles/${id}/comments`, {\n      username,\n      body\n    })\n    .then(({ data }) => {\n      return data.comment;\n    });\n};\n\nexport const removeCommentById = id => {\n  return axios.delete(`https://toms-news-api.herokuapp.com/api/comments/${id}`);\n};\n\nexport const updateVoteOnArticle = (id, inc_votes) => {\n  return axios.patch(`https://toms-news-api.herokuapp.com/api/articles/${id}`, {\n    inc_votes\n  });\n};\n\nexport const updateVoteOnComment = (id, inc_votes) => {\n  return axios.patch(`https://toms-news-api.herokuapp.com/api/comments/${id}`, {\n    inc_votes\n  });\n};\n\nexport const getUsers = () => {\n  return axios\n    .get(\"https://toms-news-api.herokuapp.com/api/users\")\n    .then(({ data }) => {\n      return data.users;\n    });\n};\n\nexport const getUserByUsername = username => {\n  return axios\n    .get(`https://toms-news-api.herokuapp.com/api/users/${username}`)\n    .then(({ data }) => {\n      return data.user;\n    });\n};\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"header\">\n      <h1>NC News</h1>\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function ErrorPage(props) {\n  console.dir(props.error);\n  const { status } = props.error.response;\n  const { msg } = props.error.response.data;\n  return (\n    <section className=\"errInfo\">\n      <p>Uh Oh, an error has occurred!</p>\n      <p>Status : {status}</p>\n      <p>Error Message : {msg}</p>\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport { navigate } from \"@reach/router\";\nimport ErrorPage from \"./ErrorPage\";\n\nexport default class TopicSelect extends Component {\n  state = {\n    topicList: [],\n    curOption: \"Select a topic\",\n    error: null\n  };\n  render() {\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    return (\n      <select\n        name=\"topicSelect\"\n        id=\"topicNav\"\n        onChange={this.handleClick}\n        value={this.state.curOption}\n      >\n        <option value=\"notChose\">Select a topic</option>\n        {this.state.topicList.map(topic => {\n          return (\n            <option key={topic.slug} value={topic.slug}>\n              {topic.slug}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n  componentDidMount() {\n    api\n      .getTopics()\n      .then(topics => {\n        this.setState({ topicList: topics });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  }\n\n  componentDidUpdate() {\n    if (this.props.setDefault) {\n      this.setState({ curOption: \"Select a topic\" });\n      this.props.resetDefault();\n    }\n  }\n\n  handleClick = event => {\n    if (event.target.value !== \"notChose\") {\n      navigate(`/topics/${event.target.value}`);\n      this.setState({ curOption: event.target.value });\n    } else {\n      navigate(\"/articles\");\n      this.setState({ curOption: \"Select a topic\" });\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport TopicSelect from \"./TopicSelect\";\nimport { Link } from \"@reach/router\";\n\nexport default class NavBar extends Component {\n  state = {\n    setDefault: false\n  };\n  render() {\n    return (\n      <nav className=\"nav\">\n        <Link to=\"/\">\n          <button onClick={this.handleClick} className=\"customBtn\">\n            Home\n          </button>\n        </Link>\n        <Link to=\"/articles\">\n          <button onClick={this.handleClick} className=\"customBtn\">\n            All articles\n          </button>\n        </Link>\n        <TopicSelect\n          setDefault={this.state.setDefault}\n          resetDefault={this.resetDefault}\n        />\n      </nav>\n    );\n  }\n\n  handleClick = () => {\n    this.setState({ setDefault: true });\n  };\n\n  resetDefault = () => {\n    this.setState({ setDefault: false });\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport ErrorPage from \"./ErrorPage\";\n\nexport default class VotingBtns extends Component {\n  state = {\n    votes: 0,\n    upvoteClicked: false,\n    downvoteClicked: false,\n    error: null\n  };\n  render() {\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    return (\n      <section className=\"votingSection\">\n        <section className=\"votingBtns\">\n          <button\n            disabled={!this.props.user || this.state.downvoteClicked === true}\n            value=\"1\"\n            onClick={this.handleUpVoteClick}\n            className={this.state.upvoteClicked ? \"upvoteClicked\" : \"voteBtn\"}\n          >\n            ↑\n          </button>\n          <button\n            disabled={!this.props.user || this.state.upvoteClicked === true}\n            value=\"-1\"\n            onClick={this.handleDownVoteClick}\n            className={\n              this.state.downvoteClicked ? \"downvoteClicked\" : \"voteBtn\"\n            }\n          >\n            ↓\n          </button>\n        </section>\n        <p>Votes:{this.state.votes}</p>\n      </section>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({ votes: this.props.votes });\n  }\n\n  handleUpVoteClick = event => {\n    let voteVal = Number(event.target.value);\n\n    if (this.state.upvoteClicked) voteVal = -1;\n    this.setState(curState => {\n      return {\n        votes: curState.votes + voteVal,\n        upvoteClicked: !curState.upvoteClicked\n      };\n    });\n\n    this.updateVotes(voteVal);\n  };\n\n  handleDownVoteClick = event => {\n    let voteVal = Number(event.target.value);\n\n    if (this.state.downvoteClicked) voteVal = 1;\n    this.setState(curState => {\n      return {\n        votes: curState.votes + voteVal,\n        downvoteClicked: !curState.downvoteClicked\n      };\n    });\n    this.updateVotes(voteVal);\n  };\n\n  updateVotes = vote => {\n    if (this.props.article_id) {\n      api.updateVoteOnArticle(this.props.article_id, vote).catch(error => {\n        this.setState({ error });\n      });\n    } else if (this.props.comment_id) {\n      api.updateVoteOnComment(this.props.comment_id, vote).catch(error => {\n        this.setState({ error });\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport VotingBtns from \"./VotingBtns\";\n\nconst dateReg = /\\d{4}-\\d{2}-\\d{2}/;\nexport default function ArticleCard(props) {\n  return (\n    <li className=\"articleCard\">\n      <section className=\"articleCardText\">\n        <Link to={`/articles/${props.article.article_id}`}>\n          <p>{props.article.title}</p>\n        </Link>\n        <p></p>\n        <p></p>\n        <p>\n          <i>\n            Written by {props.article.author} <br />\n            {props.article.comment_count} comments <br />\n            Created on{\" \"}\n            {props.article.created_at\n              .match(dateReg)[0]\n              .split(\"-\")\n              .reverse()\n              .join(\"-\")}\n          </i>\n        </p>\n      </section>\n      <VotingBtns\n        user={props.user}\n        votes={props.article.votes}\n        article_id={props.article.article_id}\n      />\n    </li>\n  );\n}\n","import React from \"react\";\n\nexport default function SortArticleBar(props) {\n  return (\n    <select name=\"articleSort\" onChange={props.changeQuery}>\n      <option value=\"default\">Most recent</option>\n      <option value=\"order=asc\">Oldest first</option>\n      <option value=\"sortBy=comment_count\">Most commented</option>\n      <option value=\"sortBy=comment_count=order=asc\">Least commented</option>\n      <option value=\"sortBy=votes\">Most popular</option>\n      <option value=\"sortBy=votes=order=asc\">Least popular</option>\n    </select>\n  );\n}\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nexport default function Loading() {\n  return (\n    <section className=\"loadingElement\">\n      <ReactLoading type=\"bubbles\" color=\"black\" className=\"loadingBubbles\" />\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport ArticleCard from \"./ArticleCard\";\nimport SortArticleBar from \"./SortArticleBar\";\nimport Loading from \"./Loading\";\nimport ErrorPage from \"./ErrorPage\";\n\nexport default class AllArticles extends Component {\n  state = {\n    articles: [],\n    total_articles: 0,\n    curPage: 1,\n    article_count: 0,\n    sortQuery: { sortBy: null, order: null },\n    isLoading: true,\n    error: null\n  };\n\n  render() {\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    return (\n      <section className=\"articlesPage\">\n        <SortArticleBar changeQuery={this.changeSortQuery} />\n        <br />\n        <button onClick={this.prevPage} className=\"customBtn\">\n          {\"<\"}{\" \"}\n        </button>\n        <button onClick={this.nextPage} className=\"customBtn\">\n          {\">\"}\n        </button>\n        {this.state.isLoading ? (\n          <Loading />\n        ) : (\n          <ul className=\"allArticlesList\">\n            {this.state.articles.map(article => {\n              return (\n                <ArticleCard\n                  article={article}\n                  key={article.article_id}\n                  user={this.props.user}\n                />\n              );\n            })}\n          </ul>\n        )}\n        <button onClick={this.prevPage} className=\"customBtn\">\n          {\"<\"}{\" \"}\n        </button>\n        <button onClick={this.nextPage} className=\"customBtn\">\n          {\">\"}\n        </button>\n      </section>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchArticles({\n      page: this.state.curPage,\n      topic: this.props.topic,\n      author: this.props.author,\n      ...this.state.sortQuery\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.sortQuery.sortBy !== this.state.sortQuery.sortBy ||\n      prevState.sortQuery.order !== this.state.sortQuery.order\n    ) {\n      this.fetchArticles(\n        {\n          page: this.state.curPage,\n          topic: this.props.topic,\n          author: this.props.author,\n          ...this.state.sortQuery\n        },\n        { update: true }\n      );\n    } else if (prevProps.topic !== this.props.topic) {\n      this.fetchArticles({\n        page: this.state.curPage,\n        topic: this.props.topic,\n        author: this.props.author,\n        ...this.state.sortQuery\n      });\n    }\n  }\n\n  nextPage = () => {\n    if (this.state.article_count < this.state.total_articles) {\n      this.setState({ isLoading: true });\n      this.fetchArticles(\n        {\n          page: this.state.curPage + 1,\n          topic: this.props.topic,\n          author: this.props.author,\n          ...this.state.sortQuery\n        },\n        { inc: true }\n      );\n    }\n  };\n\n  prevPage = () => {\n    if (this.state.curPage > 1) {\n      this.setState({ isLoading: true });\n      this.fetchArticles(\n        {\n          page: this.state.curPage - 1,\n          topic: this.props.topic,\n          author: this.props.author,\n          ...this.state.sortQuery\n        },\n        { dec: true }\n      );\n    }\n  };\n\n  fetchArticles = (query, options) => {\n    if (options) {\n      options.inc &&\n        api\n          .getArticles(query)\n          .then(({ articles }) => {\n            this.setState(curState => {\n              return {\n                articles,\n                curPage: curState.curPage + 1,\n                article_count: curState.article_count + articles.length,\n                isLoading: false\n              };\n            });\n          })\n          .catch(error => {\n            this.setState({ error, isLoading: false });\n          });\n\n      options.dec &&\n        api\n          .getArticles(query)\n          .then(({ articles }) => {\n            this.setState(curState => {\n              return {\n                articles,\n                curPage: curState.curPage - 1,\n                article_count:\n                  curState.article_count - curState.articles.length,\n                isLoading: false\n              };\n            });\n          })\n          .catch(error => {\n            this.setState({ error, isLoading: false });\n          });\n\n      options.update &&\n        api\n          .getArticles(query)\n          .then(({ articles }) => {\n            this.setState({\n              articles,\n              isLoading: false\n            });\n          })\n          .catch(error => {\n            this.setState({ error, isLoading: false });\n          });\n    } else {\n      api\n        .getArticles(query)\n        .then(({ articles, total_articles }) => {\n          this.setState({\n            articles,\n            total_articles,\n            article_count: articles.length,\n            isLoading: false\n          });\n        })\n        .catch(error => {\n          this.setState({ error, isLoading: false });\n        });\n    }\n  };\n\n  changeSortQuery = event => {\n    if (event.target.value !== \"default\") {\n      const queryArr = event.target.value.split(\"=\");\n      const query = {};\n      queryArr.forEach((item, index) => {\n        if (index % 2 === 0) query[item] = queryArr[index + 1];\n      });\n      this.setState({ sortQuery: query, isLoading: true });\n    } else {\n      this.setState({\n        sortQuery: { sortBy: null, order: null },\n        isLoading: true\n      });\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport ErrorPage from \"./ErrorPage\";\n\nexport default class CommentAdder extends Component {\n  state = {\n    commentInput: \"Enter your comment here.\",\n    error: null\n  };\n  render() {\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    return this.props.user ? (\n      <section className=\"commentAdder\">\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <b>{this.props.user} : </b>\n            <textarea\n              required\n              id=\"commentInput\"\n              value={this.state.commentInput}\n              onChange={this.validateInput}\n              onClick={this.removeDefaultText}\n            />\n          </label>\n          <button type=\"submit\">Add comment.</button>\n        </form>\n      </section>\n    ) : (\n      <p>You must be logged in to add a comment! </p>\n    );\n  }\n  validateInput = event => {\n    this.setState({ commentInput: event.target.value });\n  };\n\n  removeDefaultText = event => {\n    if (event.target.value === \"Enter your comment here.\")\n      this.setState({ commentInput: \"\" });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const input = this.state.commentInput;\n    if (input !== \"Enter your comment here.\") {\n      api\n        .addCommentOnArticle(\n          Number(this.props.article_id),\n          this.props.user,\n          input\n        )\n        .then(comment => {\n          this.props.commentIsAdded(comment);\n          this.setState({\n            commentInput: \"Enter your comment here.\"\n          });\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    }\n  };\n}\n","import React from \"react\";\nimport VotingBtns from \"./VotingBtns\";\n\nexport default function CommentCard(props) {\n  return (\n    <section className=\"commentAndVotes\">\n      <li className=\"commentCard\">\n        <b>{props.comment.author} : </b> {props.comment.body}\n      </li>{\" \"}\n      <VotingBtns\n        user={props.user}\n        comment_id={props.comment.comment_id}\n        votes={props.comment.votes}\n      />\n      {props.user === props.comment.author && (\n        <button\n          id={props.comment.comment_id}\n          onClick={props.handleClick}\n          className=\"customBtn\"\n        >\n          Delete comment\n        </button>\n      )}\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\nimport * as api from \"../api\";\nimport CommentAdder from \"./CommentAdder\";\nimport CommentCard from \"./CommentCard\";\nimport Loading from \"./Loading\";\nimport ErrorPage from \"./ErrorPage\";\n\nexport default class ArticleComments extends Component {\n  state = {\n    comments: [],\n    curPage: 1,\n    isLoading: true,\n    error: null\n  };\n  render() {\n    if (this.state.isLoading) return <Loading />;\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    return (\n      <section className=\"articleComments\">\n        <br />\n        <CommentAdder\n          user={this.props.user}\n          article_id={this.props.article_id}\n          commentIsAdded={this.commentIsAdded}\n        />\n        <ul>\n          {this.state.comments.map(comment => {\n            return (\n              <CommentCard\n                user={this.props.user}\n                comment={comment}\n                key={comment.comment_id}\n                handleClick={this.handleDeleteClick}\n              />\n            );\n          })}\n        </ul>\n        {this.state.comments.length < this.props.total_comments ? (\n          <Link\n            to={`/articles/${this.props.article_id}/comments`}\n            onClick={this.loadNextPage}\n          >\n            Show more comments\n          </Link>\n        ) : (\n          this.state.curPage > 1 && (\n            <Link\n              to={`/articles/${this.props.article_id}/comments`}\n              onClick={this.loadFirstPage}\n            >\n              Show less\n            </Link>\n          )\n        )}\n      </section>\n    );\n  }\n\n  fetchComments = () => {\n    api\n      .getCommentsForArticle(this.props.article_id)\n      .then(comments => {\n        this.setState({\n          comments,\n          curPage: 1,\n          isLoading: false\n        });\n      })\n      .catch(error => {\n        this.setState({ error, isLoading: false });\n      });\n  };\n\n  componentDidMount() {\n    this.fetchComments();\n    this.props.trueOnMount();\n  }\n\n  commentIsAdded = comment => {\n    this.setState(curState => {\n      this.props.updateCommentTotal(1);\n      return { comments: [comment, ...curState.comments] };\n    });\n  };\n\n  handleDeleteClick = event => {\n    api\n      .removeCommentById(event.target.id)\n      .then(() => {\n        this.fetchComments();\n        this.props.updateCommentTotal(-1);\n      })\n      .catch(error => {\n        this.setState({ error, isLoading: false });\n      });\n  };\n\n  loadNextPage = () => {\n    if (this.state.comments.length < this.props.total_comments)\n      this.setState({ isLoading: true });\n    api\n      .getCommentsForArticle(this.props.article_id, {\n        page: this.state.curPage + 1\n      })\n      .then(comments => {\n        this.setState(curState => {\n          const commentsCopy = curState.comments.map(({ ...comment }) => {\n            return comment;\n          });\n          commentsCopy.push(...comments);\n          return {\n            comments: commentsCopy,\n            curPage: curState.curPage + 1,\n            isLoading: false\n          };\n        });\n      })\n      .catch(error => {\n        this.setState({ error, isLoading: false });\n      });\n  };\n\n  loadFirstPage = () => {\n    this.fetchComments();\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport { Router, navigate } from \"@reach/router\";\nimport ArticleComments from \"./ArticleComments\";\nimport Loading from \"./Loading\";\nimport ErrorPage from \"./ErrorPage\";\n\nexport default class SingleArticle extends Component {\n  state = {\n    article: {},\n    showComment: false,\n    isLoading: true,\n    error: null\n  };\n  render() {\n    if (this.state.isLoading) return <Loading />;\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    return (\n      <section className=\"singleArticlePage\">\n        <h4>{this.state.article.title}</h4>\n        <p>{this.state.article.body}</p>\n        <p>\n          <i>Written by {this.state.article.author}</i>\n        </p>\n        <button onClick={this.showHideComments}>\n          {this.state.showComment\n            ? \"Hide comments\"\n            : `Show comments (${this.state.article.comment_count})`}\n        </button>\n        <Router>\n          <ArticleComments\n            path=\"/comments\"\n            user={this.props.user}\n            total_comments={this.state.article.comment_count}\n            updateCommentTotal={this.updateCommentCount}\n            trueOnMount={this.setTrueOnCommentsMount}\n          />\n        </Router>\n      </section>\n    );\n  }\n  componentDidMount() {\n    api\n      .getArticleById(this.props.article_id)\n      .then(article => {\n        this.setState({ article, isLoading: false });\n      })\n      .catch(error => {\n        this.setState({ error, isLoading: false });\n      });\n  }\n\n  showHideComments = () => {\n    this.setState(curState => {\n      if (curState.showComment) {\n        navigate(`/articles/${this.props.article_id}`);\n      } else {\n        navigate(`/articles/${this.props.article_id}/comments`);\n      }\n      return { showComment: !curState.showComment };\n    });\n  };\n\n  updateCommentCount = commentNum => {\n    this.setState(curState => {\n      return {\n        article: {\n          ...curState.article,\n          comment_count: curState.article.comment_count + commentNum\n        }\n      };\n    });\n  };\n\n  setTrueOnCommentsMount = () => {\n    this.setState({ showComment: true });\n  };\n}\n","import React from \"react\";\nimport AllArticles from \"./AllArticles\";\n\nexport default function SingleTopic(props) {\n  return (\n    <section className=\"topicList\">\n      <h2>Topic : {props.topic_slug}</h2>\n      <AllArticles topic={props.topic_slug} user={props.user} />\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport Loading from \"./Loading\";\nimport ErrorPage from \"./ErrorPage\";\nimport AllArticles from \"./AllArticles\";\n\nexport default class HomePage extends Component {\n  state = { users: [], isLoading: true, error: null };\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />;\n    }\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    if (!this.props.user) {\n      return (\n        <section className=\"homePage\">\n          <h3>Login</h3>\n          {this.state.users.map(user => {\n            return (\n              <p key={user.username}>\n                <img\n                  className=\"loginAvatar\"\n                  src={user.avatar_url}\n                  alt={`${user.username} profile avatar`}\n                />\n                <br />\n                {user.username}{\" \"}\n                <button\n                  value={user.username}\n                  onClick={this.props.handleLogin}\n                  className=\"customBtn\"\n                >\n                  Login\n                </button>\n              </p>\n            );\n          })}\n        </section>\n      );\n    } else {\n      return (\n        <section className=\"homePage\">\n          <p>You are logged in as: {this.props.user}</p>\n          <h3>Your Articles:</h3>\n          <AllArticles author={this.props.user} user={this.props.user} />\n          <button\n            value={null}\n            onClick={this.props.handleLogin}\n            className=\"customBtn\"\n          >\n            Logout\n          </button>\n        </section>\n      );\n    }\n  }\n  componentDidMount() {\n    api\n      .getUsers()\n      .then(users => {\n        this.setState({ users, isLoading: false });\n      })\n      .catch(error => {\n        this.setState({ error, isLoading: false });\n      });\n  }\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nexport default function LoggedUserInfo(props) {\n  return (\n    <section className=\"logInfo\">\n      {props.loggedUser ? (\n        <div>\n          <label>\n            <img\n              src={props.loggedUserImg}\n              alt={`${props.loggedUser} profile avatar`}\n              className=\"smallLoginAvatar\"\n            />\n            <br />\n            {props.loggedUser}\n          </label>\n          <br />\n          <button\n            value={null}\n            onClick={props.handleLogin}\n            id=\"permLogoutBtn\"\n            className=\"customBtn\"\n          >\n            Logout\n          </button>\n        </div>\n      ) : (\n        <Link to=\"/\">\n          <button className=\"customBtn\">Login</button>\n        </Link>\n      )}\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Router } from \"@reach/router\";\nimport { getUserByUsername } from \"./api\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport AllArticles from \"./components/AllArticles\";\nimport SingleArticle from \"./components/SingleArticle\";\nimport SingleTopic from \"./components/SingleTopic\";\nimport HomePage from \"./components/HomePage\";\nimport LoggedUserInfo from \"./components/LoggedUserInfo\";\nimport ErrorPage from \"./components/ErrorPage\";\n\nclass App extends Component {\n  state = { loggedUser: null, loggedUserImg: null, error: null };\n  render() {\n    if (this.state.error) return <ErrorPage error={this.state.error} />;\n    return (\n      <div className=\"App\">\n        <section className=\"topOfPage\">\n          <LoggedUserInfo\n            loggedUser={this.state.loggedUser}\n            loggedUserImg={this.state.loggedUserImg}\n            handleLogin={this.handleLoginLogout}\n          />\n          <Header user={this.state.loggedUser} className=\"header\" />\n          <NavBar />\n        </section>\n        <Router className=\"mainContent\">\n          <HomePage\n            path=\"/\"\n            user={this.state.loggedUser}\n            handleLogin={this.handleLoginLogout}\n          />\n          <AllArticles path=\"/articles\" user={this.state.loggedUser} />\n          <SingleArticle\n            path=\"/articles/:article_id/*\"\n            user={this.state.loggedUser}\n          />\n          <SingleTopic\n            path=\"/topics/:topic_slug\"\n            user={this.state.loggedUser}\n          />\n        </Router>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({ loggedUser: localStorage.getItem(\"loggedUser\") });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.loggedUser !== this.state.loggedUser &&\n      this.state.loggedUser\n    ) {\n      getUserByUsername(this.state.loggedUser)\n        .then(user => {\n          this.setState({ loggedUserImg: user.avatar_url });\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    }\n  }\n  handleLoginLogout = event => {\n    const { value } = event.target;\n    this.setState({ loggedUser: value });\n    localStorage.setItem(\"loggedUser\", value);\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}