{"version":3,"sources":["api.js","components/Header.jsx","components/TopicSelect.jsx","components/NavBar.jsx","components/VotingBtns.jsx","components/ArticleCard.jsx","components/SortArticleBar.jsx","components/Loading.jsx","components/AllArticles.jsx","components/CommentAdder.jsx","components/CommentCard.jsx","components/ArticleComments.jsx","components/SingleArticle.jsx","components/SingleTopic.jsx","components/HomePage.jsx","components/LoggedUserInfo.jsx","App.js","serviceWorker.js","index.js"],"names":["getArticles","query","axios","get","params","p","page","topic","sort_by","sortBy","order","then","data","articles","total_articles","total_count","getArticleById","id","article","getCommentsForArticle","comments","addCommentOnArticle","username","body","post","comment","removeCommentById","delete","updateVoteOnArticle","inc_votes","patch","updateVoteOnComment","Header","props","className","TopicSelect","state","topicList","curOption","handleClick","event","target","value","navigate","setState","name","onChange","this","map","key","slug","topics","setDefault","resetDefault","Component","NavBar","to","onClick","VotingBtns","votes","upvoteClicked","downvoteClicked","handleUpVoteClick","voteVal","Number","curState","updateVotes","handleDownVoteClick","vote","article_id","api","comment_id","disabled","user","dateReg","ArticleCard","title","created_at","match","split","reverse","join","SortArticleBar","changeQuery","Loading","type","color","AllArticles","curPage","article_count","sortQuery","isLoading","nextPage","fetchArticles","inc","prevPage","dec","options","length","update","changeSortQuery","queryArr","forEach","item","index","prevProps","prevState","CommentAdder","commentInput","validateInput","removeDefaultText","handleSubmit","preventDefault","children","commentIsAdded","catch","err","console","dir","onSubmit","CommentCard","author","ArticleComments","total_comments","comment_count","fetchComments","handleDeleteClick","loadNextPage","commentsCopy","push","loadFirstPage","getCommentTotal","trueOnMount","SingleArticle","showComment","showHideComments","getCommentCount","setTrueOnCommentsMount","path","SingleTopic","topic_articles","topic_slug","HomePage","users","handleLogin","src","avatar_url","alt","LoggedUserInfo","loggedUser","loggedUserImg","App","handleLoginLogout","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eabfb14a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getTopics = () => {\n  return axios\n    .get(\"https://toms-news-api.herokuapp.com/api/topics\")\n    .then(({ data }) => {\n      return data.topics;\n    });\n};\n\nexport const getArticles = query => {\n  return axios\n    .get(\"https://toms-news-api.herokuapp.com/api/articles\", {\n      params: {\n        p: query && query.page,\n        topic: query && query.topic,\n        sort_by: query && query.sortBy,\n        order: query && query.order\n      }\n    })\n    .then(({ data }) => {\n      return { articles: data.articles, total_articles: data.total_count };\n    });\n};\n\nexport const getArticleById = id => {\n  return axios\n    .get(`https://toms-news-api.herokuapp.com/api/articles/${id}`)\n    .then(({ data }) => {\n      return data.article;\n    });\n};\n\nexport const getCommentsForArticle = (id, query) => {\n  return axios\n    .get(`https://toms-news-api.herokuapp.com/api/articles/${id}/comments`, {\n      params: { p: query && query.page }\n    })\n    .then(({ data }) => {\n      return data.comments;\n    });\n};\n\nexport const addCommentOnArticle = (id, username, body) => {\n  return axios\n    .post(`https://toms-news-api.herokuapp.com/api/articles/${id}/comments`, {\n      username,\n      body\n    })\n    .then(({ data }) => {\n      return data.comment;\n    });\n};\n\nexport const removeCommentById = id => {\n  return axios.delete(`https://toms-news-api.herokuapp.com/api/comments/${id}`);\n};\n\nexport const updateVoteOnArticle = (id, inc_votes) => {\n  return axios.patch(`https://toms-news-api.herokuapp.com/api/articles/${id}`, {\n    inc_votes\n  });\n};\n\nexport const updateVoteOnComment = (id, inc_votes) => {\n  return axios.patch(`https://toms-news-api.herokuapp.com/api/comments/${id}`, {\n    inc_votes\n  });\n};\n\nexport const getUsers = () => {\n  return axios\n    .get(\"https://toms-news-api.herokuapp.com/api/users\")\n    .then(({ data }) => {\n      return data.users;\n    });\n};\n\nexport const getUserByUsername = username => {\n  return axios\n    .get(`https://toms-news-api.herokuapp.com/api/users/${username}`)\n    .then(({ data }) => {\n      return data.user;\n    });\n};\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"header\">\n      <h1>NC News</h1>\n    </header>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport { navigate } from \"@reach/router\";\n\nexport default class TopicSelect extends Component {\n  state = {\n    topicList: [],\n    curOption: \"Select a topic\"\n  };\n  render() {\n    return (\n      <select\n        name=\"topicSelect\"\n        id=\"topicNav\"\n        onChange={this.handleClick}\n        value={this.state.curOption}\n      >\n        <option value=\"notChose\">Select a topic</option>\n        {this.state.topicList.map(topic => {\n          return (\n            <option key={topic.slug} value={topic.slug}>\n              {topic.slug}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n  componentDidMount() {\n    api.getTopics().then(topics => {\n      this.setState({ topicList: topics });\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.setDefault) {\n      this.setState({ curOption: \"Select a topic\" });\n      this.props.resetDefault();\n    }\n  }\n\n  handleClick = event => {\n    if (event.target.value !== \"notChose\") {\n      navigate(`/topics/${event.target.value}`);\n      this.setState({ curOption: event.target.value });\n    } else {\n      navigate(\"/articles\");\n      this.setState({ curOption: \"Select a topic\" });\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport TopicSelect from \"./TopicSelect\";\nimport { Link } from \"@reach/router\";\n\nexport default class NavBar extends Component {\n  state = {\n    setDefault: false\n  };\n  render() {\n    return (\n      <nav className=\"nav\">\n        <Link to=\"/\">\n          <button onClick={this.handleClick}>Home</button>\n        </Link>\n        <Link to=\"/articles\">\n          <button onClick={this.handleClick}>All articles</button>\n        </Link>\n        <TopicSelect\n          setDefault={this.state.setDefault}\n          resetDefault={this.resetDefault}\n        />\n      </nav>\n    );\n  }\n\n  handleClick = () => {\n    this.setState({ setDefault: true });\n  };\n\n  resetDefault = () => {\n    this.setState({ setDefault: false });\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\n\nexport default class VotingBtns extends Component {\n  state = { votes: 0, upvoteClicked: false, downvoteClicked: false };\n  render() {\n    return (\n      <section className=\"votingSection\">\n        <section className=\"votingBtns\">\n          <button\n            disabled={!this.props.user || this.state.downvoteClicked === true}\n            value=\"1\"\n            onClick={this.handleUpVoteClick}\n            className={this.state.upvoteClicked ? \"upvoteClicked\" : \"voteBtn\"}\n          >\n            ↑\n          </button>\n          <button\n            disabled={!this.props.user || this.state.upvoteClicked === true}\n            value=\"-1\"\n            onClick={this.handleDownVoteClick}\n            className={\n              this.state.downvoteClicked ? \"downvoteClicked\" : \"voteBtn\"\n            }\n          >\n            ↓\n          </button>\n        </section>\n        <p>Votes:{this.state.votes}</p>\n      </section>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({ votes: this.props.votes });\n  }\n\n  handleUpVoteClick = event => {\n    let voteVal = Number(event.target.value);\n\n    if (this.state.upvoteClicked) voteVal = -1;\n    this.setState(curState => {\n      return {\n        votes: curState.votes + voteVal,\n        upvoteClicked: !curState.upvoteClicked\n      };\n    });\n\n    this.updateVotes(voteVal);\n  };\n\n  handleDownVoteClick = event => {\n    let voteVal = Number(event.target.value);\n\n    if (this.state.downvoteClicked) voteVal = 1;\n    this.setState(curState => {\n      return {\n        votes: curState.votes + voteVal,\n        downvoteClicked: !curState.downvoteClicked\n      };\n    });\n    this.updateVotes(voteVal);\n  };\n\n  updateVotes = vote => {\n    if (this.props.article_id) {\n      api.updateVoteOnArticle(this.props.article_id, vote);\n    } else if (this.props.comment_id) {\n      api.updateVoteOnComment(this.props.comment_id, vote);\n    }\n  };\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport VotingBtns from \"./VotingBtns\";\n\nconst dateReg = /\\d{4}-\\d{2}-\\d{2}/;\nexport default function ArticleCard(props) {\n  return (\n    <section className=\"articleCard\">\n      <section className=\"articleCardText\">\n        <Link to={`/articles/${props.article.article_id}`}>\n          <li>{props.article.title}</li>\n        </Link>\n        <p>\n          <i>\n            Created on{\" \"}\n            {props.article.created_at\n              .match(dateReg)[0]\n              .split(\"-\")\n              .reverse()\n              .join(\"-\")}\n          </i>\n        </p>\n      </section>\n      <VotingBtns\n        user={props.user}\n        votes={props.article.votes}\n        article_id={props.article.article_id}\n      />\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport default function SortArticleBar(props) {\n  return (\n    <select name=\"articleSort\" onChange={props.changeQuery}>\n      <option value=\"default\">Most recent</option>\n      <option value=\"order=asc\">Oldest first</option>\n      <option value=\"sortBy=comment_count\">Most commented</option>\n      <option value=\"sortBy=comment_count=order=asc\">Least commented</option>\n      <option value=\"sortBy=votes\">Most popular</option>\n      <option value=\"sortBy=votes=order=asc\">Least popular</option>\n    </select>\n  );\n}\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nexport default function Loading() {\n  return (\n    <section className=\"loadingElement\">\n      <ReactLoading type=\"bubbles\" color=\"black\" className=\"loadingBubbles\" />\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport ArticleCard from \"./ArticleCard\";\nimport SortArticleBar from \"./SortArticleBar\";\nimport Loading from \"./Loading\";\n\nexport default class AllArticles extends Component {\n  state = {\n    articles: [],\n    total_articles: 0,\n    curPage: 1,\n    article_count: 0,\n    sortQuery: { sortBy: null, order: null },\n    isLoading: true\n  };\n\n  render() {\n    return (\n      <section className=\"articlesPage\">\n        <br />\n        <SortArticleBar changeQuery={this.changeSortQuery} />\n        <br />\n        <br />\n        <button onClick={this.prevPage}>{\"<\"} </button>\n        <button onClick={this.nextPage}>{\">\"}</button>\n        {this.state.isLoading ? (\n          <Loading />\n        ) : (\n          <ul className=\"allArticlesList\">\n            {this.state.articles.map(article => {\n              return (\n                <ArticleCard\n                  article={article}\n                  key={article.article_id}\n                  user={this.props.user}\n                />\n              );\n            })}\n          </ul>\n        )}\n        <button onClick={this.prevPage}>{\"<\"} </button>\n        <button onClick={this.nextPage}>{\">\"}</button>\n      </section>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchArticles({ page: this.state.curPage, ...this.state.sortQuery });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.sortQuery.sortBy !== this.state.sortQuery.sortBy ||\n      prevState.sortQuery.order !== this.state.sortQuery.order\n    ) {\n      this.fetchArticles(\n        { page: this.state.curPage, ...this.state.sortQuery },\n        { update: true }\n      );\n    }\n  }\n\n  nextPage = () => {\n    if (this.state.article_count < this.state.total_articles) {\n      this.setState({ isLoading: true });\n      this.fetchArticles(\n        { page: this.state.curPage + 1, ...this.state.sortQuery },\n        { inc: true }\n      );\n    }\n  };\n\n  prevPage = () => {\n    if (this.state.curPage > 1) {\n      this.setState({ isLoading: true });\n      this.fetchArticles(\n        { page: this.state.curPage - 1, ...this.state.sortQuery },\n        { dec: true }\n      );\n    }\n  };\n\n  fetchArticles = (query, options) => {\n    if (options) {\n      options.inc &&\n        api.getArticles(query).then(({ articles }) => {\n          this.setState(curState => {\n            return {\n              articles,\n              curPage: curState.curPage + 1,\n              article_count: curState.article_count + articles.length,\n              isLoading: false\n            };\n          });\n        });\n\n      options.dec &&\n        api.getArticles(query).then(({ articles }) => {\n          this.setState(curState => {\n            return {\n              articles,\n              curPage: curState.curPage - 1,\n              article_count: curState.article_count - curState.articles.length,\n              isLoading: false\n            };\n          });\n        });\n\n      options.update &&\n        api.getArticles(query).then(({ articles }) => {\n          this.setState({\n            articles,\n            isLoading: false\n          });\n        });\n    } else {\n      api.getArticles(query).then(({ articles, total_articles }) => {\n        this.setState({\n          articles,\n          total_articles,\n          article_count: articles.length,\n          isLoading: false\n        });\n      });\n    }\n  };\n\n  changeSortQuery = event => {\n    if (event.target.value !== \"default\") {\n      const queryArr = event.target.value.split(\"=\");\n      const query = {};\n      queryArr.forEach((item, index) => {\n        if (index % 2 === 0) query[item] = queryArr[index + 1];\n      });\n      this.setState({ sortQuery: query, isLoading: true });\n    } else {\n      this.setState({\n        sortQuery: { sortBy: null, order: null },\n        isLoading: true\n      });\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\n\nexport default class CommentAdder extends Component {\n  state = {\n    commentInput: \"Enter your comment here.\"\n  };\n  render() {\n    return this.props.user ? (\n      <section className=\"commentAdder\">\n        <form onSubmit={this.handleSubmit}>\n          <b>{this.props.user} : </b>\n          <textarea\n            id=\"commentInput\"\n            value={this.state.commentInput}\n            onChange={this.validateInput}\n            onClick={this.removeDefaultText}\n          />\n          <br />\n          {this.state.commentInput === \"\" && <p>You cant comment nothing!</p>}\n          <button type=\"submit\">Add comment.</button>\n        </form>\n      </section>\n    ) : (\n      <p>You must be logged in to add a comment! </p>\n    );\n  }\n  validateInput = event => {\n    this.setState({ commentInput: event.target.value });\n  };\n\n  removeDefaultText = event => {\n    if (event.target.value === \"Enter your comment here.\")\n      this.setState({ commentInput: \"\" });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { value } = event.target.children.commentInput;\n    if (value !== \"Enter your comment here.\" && value.length > 0) {\n      api\n        .addCommentOnArticle(\n          Number(this.props.article_id),\n          this.props.user,\n          value\n        )\n        .then(() => {\n          this.props.commentIsAdded();\n        })\n        .catch(err => console.dir(err));\n    } else if (value === \"\") {\n    }\n  };\n}\n","import React from \"react\";\nimport VotingBtns from \"./VotingBtns\";\n\nexport default function CommentCard(props) {\n  return (\n    <section className=\"commentAndVotes\">\n      <li className=\"commentCard\">\n        <b>{props.comment.author} : </b> {props.comment.body}\n      </li>{\" \"}\n      <VotingBtns\n        user={props.user}\n        comment_id={props.comment.comment_id}\n        votes={props.comment.votes}\n      />\n      {props.user === props.comment.author && (\n        <button\n          id={props.comment.comment_id}\n          onClick={props.handleClick}\n          className=\"commentDelBtn\"\n        >\n          Delete comment\n        </button>\n      )}\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\nimport * as api from \"../api\";\nimport CommentAdder from \"./CommentAdder\";\nimport CommentCard from \"./CommentCard\";\nimport Loading from \"./Loading\";\n\nexport default class ArticleComments extends Component {\n  state = {\n    comments: [],\n    total_comments: 0,\n    comment_count: 0,\n    curPage: 1\n  };\n  render() {\n    if (this.state.comments.length === 0) return <Loading />;\n    return (\n      <section className=\"articleComments\">\n        <br />\n        <CommentAdder\n          user={this.props.user}\n          article_id={this.props.article_id}\n          commentIsAdded={this.commentIsAdded}\n        />\n        <ul>\n          {this.state.comments.map(comment => {\n            return (\n              <CommentCard\n                user={this.props.user}\n                comment={comment}\n                key={comment.comment_id}\n                handleClick={this.handleDeleteClick}\n              />\n            );\n          })}\n        </ul>\n        {this.state.comment_count < this.state.total_comments ? (\n          <Link\n            to={`/articles/${this.props.article_id}/comments`}\n            onClick={this.loadNextPage}\n          >\n            Show more comments\n          </Link>\n        ) : (\n          this.state.curPage > 1 && (\n            <Link\n              to={`/articles/${this.props.article_id}/comments`}\n              onClick={this.loadFirstPage}\n            >\n              Show less\n            </Link>\n          )\n        )}\n      </section>\n    );\n  }\n\n  fetchComments = () => {\n    api.getCommentsForArticle(this.props.article_id).then(comments => {\n      this.setState({\n        comments,\n        total_comments: this.props.total_comments,\n        comment_count: comments.length,\n        curPage: 1\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.fetchComments();\n    if (!this.state.total_comments)\n      this.props\n        .getCommentTotal()\n        .then(total_comments => this.setState({ total_comments }));\n    this.props.trueOnMount();\n  }\n\n  commentIsAdded = () => {\n    this.fetchComments();\n  };\n\n  handleDeleteClick = event => {\n    api.removeCommentById(event.target.id).then(() => {\n      this.fetchComments();\n    });\n  };\n\n  loadNextPage = () => {\n    if (this.state.comment_count < this.state.total_comments)\n      api\n        .getCommentsForArticle(this.props.article_id, {\n          page: this.state.curPage + 1\n        })\n        .then(comments => {\n          this.setState(curState => {\n            const commentsCopy = curState.comments.map(({ ...comment }) => {\n              return comment;\n            });\n            commentsCopy.push(...comments);\n            return {\n              comments: commentsCopy,\n              curPage: curState.curPage + 1,\n              comment_count: curState.comment_count + comments.length\n            };\n          });\n        });\n  };\n\n  loadFirstPage = () => {\n    this.fetchComments();\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport { Router, navigate } from \"@reach/router\";\nimport ArticleComments from \"./ArticleComments\";\nimport Loading from \"./Loading\";\n\nexport default class SingleArticle extends Component {\n  state = {\n    article: {},\n    showComment: false\n  };\n  render() {\n    if (!this.state.article.title) return <Loading />;\n    return (\n      <section className=\"singleArticlePage\">\n        <h4>{this.state.article.title}</h4>\n        <p>{this.state.article.body}</p>\n        <p>\n          <i>Written by {this.state.article.author}</i>\n        </p>\n        <button onClick={this.showHideComments}>\n          {this.state.showComment\n            ? \"Hide comments\"\n            : `Show comments (${this.state.article.comment_count})`}\n        </button>\n        <Router>\n          <ArticleComments\n            path=\"/comments\"\n            user={this.props.user}\n            total_comments={this.state.article.comment_count}\n            getCommentTotal={this.getCommentCount}\n            trueOnMount={this.setTrueOnCommentsMount}\n          />\n        </Router>\n      </section>\n    );\n  }\n  componentDidMount() {\n    api.getArticleById(this.props.article_id).then(article => {\n      this.setState({ article });\n    });\n  }\n\n  showHideComments = () => {\n    this.setState(curState => {\n      if (curState.showComment) {\n        navigate(`/articles/${this.props.article_id}`);\n      } else {\n        navigate(`/articles/${this.props.article_id}/comments`);\n      }\n      return { showComment: !curState.showComment };\n    });\n  };\n\n  getCommentCount = () => {\n    return api.getArticleById(this.props.article_id).then(article => {\n      return article.comment_count;\n    });\n  };\n\n  setTrueOnCommentsMount = () => {\n    this.setState({ showComment: true });\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport ArticleCard from \"./ArticleCard\";\nimport Loading from \"./Loading\";\n\nexport default class SingleTopic extends Component {\n  state = {\n    topic_articles: [],\n    total_articles: 0,\n    curPage: 1,\n    article_count: 0,\n    isLoading: true\n  };\n  render() {\n    return (\n      <section className=\"topicList\">\n        <h2>Topic : {this.props.topic_slug}</h2>\n        <button onClick={this.prevPage}>{\"<\"} </button>\n        <button onClick={this.nextPage}>{\">\"}</button>\n        {this.state.isLoading ? (\n          <Loading />\n        ) : (\n          <ul className=\"topicArticleList\">\n            {this.state.topic_articles.map(article => {\n              return (\n                <ArticleCard\n                  article={article}\n                  key={article.article_id}\n                  user={this.props.user}\n                />\n              );\n            })}\n          </ul>\n        )}\n        <button onClick={this.prevPage}>{\"<\"} </button>\n        <button onClick={this.nextPage}>{\">\"}</button>\n      </section>\n    );\n  }\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topic_slug !== this.props.topic_slug) {\n      this.fetchArticles();\n    }\n  }\n\n  fetchArticles = () => {\n    this.setState({ isLoading: true });\n    api\n      .getArticles({ topic: this.props.topic_slug })\n      .then(({ articles, total_articles }) => {\n        this.setState({\n          topic_articles: articles,\n          total_articles,\n          article_count: articles.length,\n          curPage: 1,\n          isLoading: false\n        });\n      });\n  };\n\n  nextPage = () => {\n    if (this.state.article_count < this.state.total_articles) {\n      this.setState({ isLoading: true });\n      api\n        .getArticles({\n          page: this.state.curPage + 1,\n          topic: this.props.topic_slug\n        })\n        .then(({ articles }) => {\n          this.setState(curState => {\n            return {\n              topic_articles: articles,\n              curPage: curState.curPage + 1,\n              article_count: curState.article_count + articles.length,\n              isLoading: false\n            };\n          });\n        });\n    }\n  };\n\n  prevPage = () => {\n    if (this.state.curPage > 1) {\n      this.setState({ isLoading: true });\n      api\n        .getArticles({\n          page: this.state.curPage - 1,\n          topic: this.props.topic_slug\n        })\n        .then(({ articles }) => {\n          this.setState(curState => {\n            return {\n              topic_articles: articles,\n              curPage: curState.curPage - 1,\n              article_count: curState.article_count - articles.length,\n              isLoading: false\n            };\n          });\n        });\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport Loading from \"./Loading\";\n\nexport default class HomePage extends Component {\n  state = { users: [] };\n  render() {\n    if (this.state.users.length === 0) {\n      return <Loading />;\n    }\n    if (!this.props.user) {\n      return (\n        <section className=\"homePage\">\n          <h3>Login</h3>\n          {this.state.users.map(user => {\n            return (\n              <p key={user.username}>\n                <img\n                  className=\"loginAvatar\"\n                  src={user.avatar_url}\n                  alt={`${user.username} profile avatar`}\n                />\n                <br />\n                {user.username}{\" \"}\n                <button value={user.username} onClick={this.props.handleLogin}>\n                  Login\n                </button>\n              </p>\n            );\n          })}\n        </section>\n      );\n    } else {\n      return (\n        <section className=\"homePage\">\n          <p>You are logged in as: {this.props.user}</p>\n          <button value={null} onClick={this.props.handleLogin}>\n            Logout\n          </button>\n        </section>\n      );\n    }\n  }\n  componentDidMount() {\n    api.getUsers().then(users => {\n      this.setState({ users });\n    });\n  }\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nexport default function LoggedUserInfo(props) {\n  return (\n    <section className=\"logInfo\">\n      {props.loggedUser ? (\n        <div>\n          <label>\n            <img\n              src={props.loggedUserImg}\n              alt={`${props.loggedUser} profile avatar`}\n              className=\"smallLoginAvatar\"\n            />\n            <br />\n            {props.loggedUser}\n          </label>\n          <br />\n          <button value={null} onClick={props.handleLogin} id=\"permLogoutBtn\">\n            Logout\n          </button>\n        </div>\n      ) : (\n        <Link to=\"/\">\n          <button>Login</button>\n        </Link>\n      )}\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Router } from \"@reach/router\";\nimport { getUserByUsername } from \"./api\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport AllArticles from \"./components/AllArticles\";\nimport SingleArticle from \"./components/SingleArticle\";\nimport SingleTopic from \"./components/SingleTopic\";\nimport HomePage from \"./components/HomePage\";\nimport LoggedUserInfo from \"./components/LoggedUserInfo\";\n\nclass App extends Component {\n  state = { loggedUser: null, loggedUserImg: null };\n  render() {\n    return (\n      <div className=\"App\">\n        <LoggedUserInfo\n          loggedUser={this.state.loggedUser}\n          loggedUserImg={this.state.loggedUserImg}\n          handleLogin={this.handleLoginLogout}\n        />\n        <Header user={this.state.loggedUser} className=\"header\" />\n        <NavBar />\n        <Router className=\"mainContent\">\n          <HomePage\n            path=\"/\"\n            user={this.state.loggedUser}\n            handleLogin={this.handleLoginLogout}\n          />\n          <AllArticles path=\"/articles\" user={this.state.loggedUser} />\n          <SingleArticle\n            path=\"/articles/:article_id/*\"\n            user={this.state.loggedUser}\n          />\n          <SingleTopic\n            path=\"/topics/:topic_slug\"\n            user={this.state.loggedUser}\n          />\n        </Router>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.loggedUser !== this.state.loggedUser &&\n      this.state.loggedUser\n    ) {\n      getUserByUsername(this.state.loggedUser).then(user => {\n        this.setState({ loggedUserImg: user.avatar_url });\n      });\n    }\n  }\n  handleLoginLogout = event => {\n    const { value } = event.target;\n    this.setState({ loggedUser: value });\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}